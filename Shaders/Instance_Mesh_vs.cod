//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer ShadowConstant
// {
//
//   float4x4 LightViewProjection;      // Offset:    0 Size:    64
//   float4 LightPosition;              // Offset:   64 Size:    16 [unused]
//   float4 ShadowColor;                // Offset:   80 Size:    16 [unused]
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64
//   float4 light_direction;            // Offset:   64 Size:    16 [unused]
//   float4 camera_position;            // Offset:   80 Size:    16 [unused]
//
// }
//
// Resource bind info for InputBuffer
// {
//
//   struct InBuffer
//   {
//       
//       row_major float4x4 world;      // Offset:    0
//       float4 color;                  // Offset:   64
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// InputBuffer                       texture  struct         r/o             t0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
// ShadowConstant                    cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// SV_InstanceID            0   x           3   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB3[4], immediateIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_resource_structured t0, 80
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input_sgv v3.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_temps 11
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; v1.w <- vin.normal.w; 
//   v2.x <- vin.texcoord.x; v2.y <- vin.texcoord.y; 
//   v3.x <- vin.instanceID; 
//   o5.x <- <main return value>.vShadow.x; o5.y <- <main return value>.vShadow.y; o5.z <- <main return value>.vShadow.z; 
//   o4.x <- <main return value>.color.x; o4.y <- <main return value>.color.y; o4.z <- <main return value>.color.z; o4.w <- <main return value>.color.w; 
//   o3.x <- <main return value>.texcoord.x; o3.y <- <main return value>.texcoord.y; 
//   o2.x <- <main return value>.world_normal.x; o2.y <- <main return value>.world_normal.y; o2.z <- <main return value>.world_normal.z; o2.w <- <main return value>.world_normal.w; 
//   o1.x <- <main return value>.world_position.x; o1.y <- <main return value>.world_position.y; o1.z <- <main return value>.world_position.z; o1.w <- <main return value>.world_position.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 14 "C:\Users\2190322\Desktop\描画エンジン開発\PrivateEngine Bloom実裁E\Shaders\Instance_Mesh_vs.hlsl"
mov r0.xyzw, v0.xyzw  // r0.x <- pos.x; r0.y <- pos.y; r0.z <- pos.z; r0.w <- pos.w

#line 15
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.x, v3.x, l(0), t0.xxxx  // r1.x <- World._m00
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.x, v3.x, l(4), t0.xxxx  // r2.x <- World._m01
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r3.x, v3.x, l(8), t0.xxxx  // r3.x <- World._m02
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r4.x, v3.x, l(12), t0.xxxx  // r4.x <- World._m03
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.y, v3.x, l(16), t0.xxxx  // r1.y <- World._m10
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.y, v3.x, l(20), t0.xxxx  // r2.y <- World._m11
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r3.y, v3.x, l(24), t0.xxxx  // r3.y <- World._m12
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r4.y, v3.x, l(28), t0.xxxx  // r4.y <- World._m13
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.z, v3.x, l(32), t0.xxxx  // r1.z <- World._m20
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.z, v3.x, l(36), t0.xxxx  // r2.z <- World._m21
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r3.z, v3.x, l(40), t0.xxxx  // r3.z <- World._m22
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r4.z, v3.x, l(44), t0.xxxx  // r4.z <- World._m23
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.w, v3.x, l(48), t0.xxxx  // r1.w <- World._m30
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.w, v3.x, l(52), t0.xxxx  // r2.w <- World._m31
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r3.w, v3.x, l(56), t0.xxxx  // r3.w <- World._m32
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r4.w, v3.x, l(60), t0.xxxx  // r4.w <- World._m33

#line 16
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r5.x, v3.x, l(64), t0.xxxx  // r5.x <- color.x
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r5.y, v3.x, l(68), t0.xxxx  // r5.y <- color.y
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r5.z, v3.x, l(72), t0.xxxx  // r5.z <- color.z
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r5.w, v3.x, l(76), t0.xxxx  // r5.w <- color.w

#line 18
mul r6.xyzw, r1.xxxx, cb1[0].xyzw
mul r7.xyzw, r2.xxxx, cb1[1].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r3.xxxx, cb1[2].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r4.xxxx, cb1[3].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r1.yyyy, cb1[0].xyzw
mul r8.xyzw, r2.yyyy, cb1[1].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, r3.yyyy, cb1[2].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, r4.yyyy, cb1[3].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, r1.zzzz, cb1[0].xyzw
mul r9.xyzw, r2.zzzz, cb1[1].xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, r3.zzzz, cb1[2].xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, r4.zzzz, cb1[3].xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, r1.wwww, cb1[0].xyzw
mul r10.xyzw, r2.wwww, cb1[1].xyzw
add r9.xyzw, r9.xyzw, r10.xyzw
mul r10.xyzw, r3.wwww, cb1[2].xyzw
add r9.xyzw, r9.xyzw, r10.xyzw
mul r10.xyzw, r4.wwww, cb1[3].xyzw
add r9.xyzw, r9.xyzw, r10.xyzw
mul r6.xyzw, r0.xxxx, r6.xyzw
mul r7.xyzw, r0.yyyy, r7.xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r0.zzzz, r8.xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r0.wwww, r9.xyzw
add r6.xyzw, r6.xyzw, r7.xyzw  // r6.x <- vout.position.x; r6.y <- vout.position.y; r6.z <- vout.position.z; r6.w <- vout.position.w

#line 19
dp4 r7.x, r0.xyzw, r1.xyzw  // r7.x <- vout.world_position.x
dp4 r7.y, r0.xyzw, r2.xyzw  // r7.y <- vout.world_position.y
dp4 r7.z, r0.xyzw, r3.xyzw  // r7.z <- vout.world_position.z
dp4 r7.w, r0.xyzw, r4.xyzw  // r7.w <- vout.world_position.w

#line 20
itof r8.w, l(0)  // r8.w <- vin.normal.w

#line 21
mov r8.xyz, v1.xyzx
dp4 r9.x, r8.xyzw, r1.xyzw
dp4 r9.y, r8.xyzw, r2.xyzw
dp4 r9.z, r8.xyzw, r3.xyzw
dp4 r9.w, r8.xyzw, r4.xyzw
dp4 r4.x, r9.xyzw, r9.xyzw
rsq r4.x, r4.x
mul r4.xyzw, r4.xxxx, r9.xyzw  // r4.x <- vout.world_normal.x; r4.y <- vout.world_normal.y; r4.z <- vout.world_normal.z; r4.w <- vout.world_normal.w

#line 22
mov r8.xy, v2.xyxx  // r8.x <- vout.texcoord.x; r8.y <- vout.texcoord.y

#line 23
mov r5.xyzw, r5.xyzw  // r5.x <- vout.color.x; r5.y <- vout.color.y; r5.z <- vout.color.z; r5.w <- vout.color.w

#line 25
dp4 r1.x, r0.xyzw, r1.xyzw  // r1.x <- wPos.x
dp4 r1.y, r0.xyzw, r2.xyzw  // r1.y <- wPos.y
dp4 r1.z, r0.xyzw, r3.xyzw  // r1.z <- wPos.z

#line 28
nop 
mov r0.x, cb3[0].x
mov r0.y, cb3[1].x
mov r0.z, cb3[2].x
mov r0.w, cb3[3].x
mov r2.x, cb3[0].y
mov r2.y, cb3[1].y
mov r2.z, cb3[2].y
mov r2.w, cb3[3].y
mov r3.x, cb3[0].z
mov r3.y, cb3[1].z
mov r3.z, cb3[2].z
mov r3.w, cb3[3].z
mov r9.x, cb3[0].w
mov r9.y, cb3[1].w
mov r9.z, cb3[2].w
mov r9.w, cb3[3].w
mov r1.xyz, r1.xyzx

#line 25 "C:\Users\2190322\Desktop\描画エンジン開発\PrivateEngine Bloom実装中\Shaders\ShadowFunc.hlsli"
mov r1.xyz, r1.xyzx  // r1.x <- wvpPos.x; r1.y <- wvpPos.y; r1.z <- wvpPos.z

#line 26
mov r1.w, l(1.000000)  // r1.w <- wvpPos.w

#line 28
dp4 r0.x, r0.xyzw, r1.xyzw  // r0.x <- wvpPos.x
dp4 r0.y, r2.xyzw, r1.xyzw  // r0.y <- wvpPos.y
dp4 r0.z, r3.xyzw, r1.xyzw  // r0.z <- wvpPos.z
dp4 r0.w, r9.xyzw, r1.xyzw  // r0.w <- wvpPos.w

#line 30
div r0.xyz, r0.xyzx, r0.wwww

#line 32
mov r0.w, -r0.y  // r0.w <- wvpPos.y

#line 33
mul r1.xy, r0.xwxx, l(0.500000, 0.500000, 0.000000, 0.000000)
add r0.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r0.y <- wvpPos.y

#line 34
mov r0.xy, r0.xyxx  // r0.x <- <GetShadowTex return value>.x; r0.y <- <GetShadowTex return value>.y
mov r0.z, r0.z  // r0.z <- <GetShadowTex return value>.z

#line 28 "C:\Users\2190322\Desktop\描画エンジン開発\PrivateEngine Bloom実裁E\Shaders\Instance_Mesh_vs.hlsl"
mov r0.xyz, r0.xyzx  // r0.x <- vout.vShadow.x; r0.y <- vout.vShadow.y; r0.z <- vout.vShadow.z

#line 29
mov o0.xyzw, r6.xyzw
mov o1.xyzw, r7.xyzw
mov o2.xyzw, r4.xyzw
mov o4.xyzw, r5.xyzw
mov o5.xyz, r0.xyzx
mov o3.xy, r8.xyxx
ret 
// Approximately 112 instruction slots used
