//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// smpWrap                           sampler      NA          NA             s0      1 
// Tex2D                             texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXTURE                  0   xy          1     NONE   float   xy  
// LIFE                     0     z         1     NONE   float       
// TEXCOORD                 2   xyz         2     NONE   float       
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_input_ps linear v3.xyzw
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- Input.Pos.x; v0.y <- Input.Pos.y; v0.z <- Input.Pos.z; v0.w <- Input.Pos.w; 
//   v1.x <- Input.Tex.x; v1.y <- Input.Tex.y; 
//   v2.x <- Input.wPosition.x; v2.y <- Input.wPosition.y; v2.z <- Input.wPosition.z; 
//   v3.x <- Input.Color.x; v3.y <- Input.Color.y; v3.z <- Input.Color.z; v3.w <- Input.Color.w; 
//   v1.z <- Input.Life; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 8 "C:\Users\2190322\Desktop\描画エンジン開発\PrivateEngine\Shaders\GPUParticle_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
mul r0.xyzw, r0.xyzw, v3.xyzw  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 9
ge r1.x, l(0.000000), r0.w
if_nz r1.x
  discard_nz l(-1)
endif 

#line 10
mov o0.xyzw, r0.xyzw
ret 
// Approximately 8 instruction slots used
