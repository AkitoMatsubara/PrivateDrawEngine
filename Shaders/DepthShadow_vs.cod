//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 material_color;             // Offset:   64 Size:    16 [unused]
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64
//   float4 light_direction;            // Offset:   64 Size:    16 [unused]
//   float4 camera_position;            // Offset:   80 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
// COLOR                    0   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; v0.w <- input.Position.w; 
//   v1.x <- input.Normal.x; v1.y <- input.Normal.y; v1.z <- input.Normal.z; v1.w <- input.Normal.w; 
//   v2.x <- input.Tex.x; v2.y <- input.Tex.y; 
//   v3.x <- input.Color.x; v3.y <- input.Color.y; v3.z <- input.Color.z; v3.w <- input.Color.w; 
//   o2.x <- <main return value>.Normal.x; o2.y <- <main return value>.Normal.y; o2.z <- <main return value>.Normal.z; 
//   o1.x <- <main return value>.Depth.x; o1.y <- <main return value>.Depth.y; o1.z <- <main return value>.Depth.z; o1.w <- <main return value>.Depth.w; 
//   o0.x <- <main return value>.Position.x; o0.y <- <main return value>.Position.y; o0.z <- <main return value>.Position.z; o0.w <- <main return value>.Position.w
//
#line 9 "C:\Users\2190322\Desktop\描画エンジン開発\PrivateEngine\Shaders\DepthShadow_vs.hlsl"
mov r0.xyzw, v0.xyzw  // r0.x <- P.x; r0.y <- P.y; r0.z <- P.z; r0.w <- P.w

#line 11
mul r1.xyzw, cb0[0].xxxx, cb1[0].xyzw
mul r2.xyzw, cb0[0].yyyy, cb1[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[0].zzzz, cb1[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[0].wwww, cb1[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[1].xxxx, cb1[0].xyzw
mul r3.xyzw, cb0[1].yyyy, cb1[1].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[1].zzzz, cb1[2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[1].wwww, cb1[3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[2].xxxx, cb1[0].xyzw
mul r4.xyzw, cb0[2].yyyy, cb1[1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[2].zzzz, cb1[2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[2].wwww, cb1[3].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[3].xxxx, cb1[0].xyzw
mul r5.xyzw, cb0[3].yyyy, cb1[1].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[3].zzzz, cb1[2].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[3].wwww, cb1[3].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mov r5.x, r1.x  // r5.x <- matWVP._m00
mov r5.y, r2.x  // r5.y <- matWVP._m10
mov r5.z, r3.x  // r5.z <- matWVP._m20
mov r5.w, r4.x  // r5.w <- matWVP._m30
mov r6.x, r1.y  // r6.x <- matWVP._m01
mov r6.y, r2.y  // r6.y <- matWVP._m11
mov r6.z, r3.y  // r6.z <- matWVP._m21
mov r6.w, r4.y  // r6.w <- matWVP._m31
mov r7.x, r1.z  // r7.x <- matWVP._m02
mov r7.y, r2.z  // r7.y <- matWVP._m12
mov r7.z, r3.z  // r7.z <- matWVP._m22
mov r7.w, r4.z  // r7.w <- matWVP._m32
mov r4.x, r1.w  // r4.x <- matWVP._m03
mov r4.y, r2.w  // r4.y <- matWVP._m13
mov r4.z, r3.w  // r4.z <- matWVP._m23
mov r4.w, r4.w  // r4.w <- matWVP._m33

#line 12
dp4 r1.x, r0.xyzw, r5.xyzw  // r1.x <- output.Position.x
dp4 r1.y, r0.xyzw, r6.xyzw  // r1.y <- output.Position.y
dp4 r1.z, r0.xyzw, r7.xyzw  // r1.z <- output.Position.z
dp4 r1.w, r0.xyzw, r4.xyzw  // r1.w <- output.Position.w

#line 13
mov r1.xyzw, r1.xyzw  // r1.x <- output.Depth.x; r1.y <- output.Depth.y; r1.z <- output.Depth.z; r1.w <- output.Depth.w

#line 14
mov r0.xyz, v1.xyzx  // r0.x <- output.Normal.x; r0.y <- output.Normal.y; r0.z <- output.Normal.z

#line 15
mov o0.xyzw, r1.xyzw
mov o1.xyzw, r1.xyzw
mov o2.xyz, r0.xyzx
ret 
// Approximately 55 instruction slots used
