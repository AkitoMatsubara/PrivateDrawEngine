//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 material_color;             // Offset:   64 Size:    16
//
// }
//
// cbuffer ShadowConstant
// {
//
//   float4x4 LightViewProjection;      // Offset:    0 Size:    64
//   float4 LightPosition;              // Offset:   64 Size:    16 [unused]
//   float4 ShadowColor;                // Offset:   80 Size:    16 [unused]
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64
//   float4 light_direction;            // Offset:   64 Size:    16 [unused]
//   float4 camera_position;            // Offset:   80 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
// ShadowConstant                    cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB3[4], immediateIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xy
dcl_output o5.xyz
dcl_temps 2
mul r0.xyzw, cb0[1].yyyy, cb1[1].xyzw
mad r0.xyzw, cb0[1].xxxx, cb1[0].xyzw, r0.xyzw
mad r0.xyzw, cb0[1].zzzz, cb1[2].xyzw, r0.xyzw
mad r0.xyzw, cb0[1].wwww, cb1[3].xyzw, r0.xyzw
mul r0.xyzw, r0.xyzw, v0.yyyy
mul r1.xyzw, cb0[0].yyyy, cb1[1].xyzw
mad r1.xyzw, cb0[0].xxxx, cb1[0].xyzw, r1.xyzw
mad r1.xyzw, cb0[0].zzzz, cb1[2].xyzw, r1.xyzw
mad r1.xyzw, cb0[0].wwww, cb1[3].xyzw, r1.xyzw
mad r0.xyzw, v0.xxxx, r1.xyzw, r0.xyzw
mul r1.xyzw, cb0[2].yyyy, cb1[1].xyzw
mad r1.xyzw, cb0[2].xxxx, cb1[0].xyzw, r1.xyzw
mad r1.xyzw, cb0[2].zzzz, cb1[2].xyzw, r1.xyzw
mad r1.xyzw, cb0[2].wwww, cb1[3].xyzw, r1.xyzw
mad r0.xyzw, v0.zzzz, r1.xyzw, r0.xyzw
mul r1.xyzw, cb0[3].yyyy, cb1[1].xyzw
mad r1.xyzw, cb0[3].xxxx, cb1[0].xyzw, r1.xyzw
mad r1.xyzw, cb0[3].zzzz, cb1[2].xyzw, r1.xyzw
mad r1.xyzw, cb0[3].wwww, cb1[3].xyzw, r1.xyzw
mad o0.xyzw, v0.wwww, r1.xyzw, r0.xyzw
mov o1.xyzw, cb0[4].xyzw
dp4 r0.x, cb0[0].xyzw, v1.xyzw
dp4 r0.y, cb0[1].xyzw, v1.xyzw
dp4 r0.z, cb0[2].xyzw, v1.xyzw
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
mul r0.xyz, v0.yyyy, cb0[1].xyzx
mad r0.xyz, v0.xxxx, cb0[0].xyzx, r0.xyzx
mad r0.xyz, v0.zzzz, cb0[2].xyzx, r0.xyzx
mad r0.xyz, v0.wwww, cb0[3].xyzx, r0.xyzx
mov o3.xyz, r0.xyzx
mov o4.xy, v2.xyxx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r0.xyzw, r0.xyzw, cb3[3].xyzw
div r0.xyz, r0.xyzx, r0.wwww
mad o5.xyz, r0.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
ret 
// Approximately 40 instruction slots used
