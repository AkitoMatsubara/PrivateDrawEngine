//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbScene
// {
//
//   float4 viewPosition;               // Offset:    0 Size:    16 [unused]
//   row_major float4x4 inverseView;    // Offset:   16 Size:    64
//   row_major float4x4 inverseProjection;// Offset:   80 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// cbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float       
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyz         1     NONE   float   xyz 
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[9], immediateIndexed
dcl_input v0.xyz
dcl_input v3.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- vin.NDCPosition.x; v0.y <- vin.NDCPosition.y; v0.z <- vin.NDCPosition.z; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; 
//   v2.x <- vin.texcoord.x; v2.y <- vin.texcoord.y; 
//   v3.x <- vin.color.x; v3.y <- vin.color.y; v3.z <- vin.color.z; v3.w <- vin.color.w; 
//   o2.x <- <main return value>.color.x; o2.y <- <main return value>.color.y; o2.z <- <main return value>.color.z; o2.w <- <main return value>.color.w; 
//   o1.x <- <main return value>.worldPosition.x; o1.y <- <main return value>.worldPosition.y; o1.z <- <main return value>.worldPosition.z; 
//   o0.x <- <main return value>.NDCPosition.x; o0.y <- <main return value>.NDCPosition.y; o0.z <- <main return value>.NDCPosition.z; o0.w <- <main return value>.NDCPosition.w
//
#line 6 "C:\Users\2190322\Desktop\描画エンジン開発\PrivateEngine Bloom実裁E\Shaders\SkyBox_vs.hlsl"
mov r0.xyz, v0.xyzx  // r0.x <- output.NDCPosition.x; r0.y <- output.NDCPosition.y; r0.z <- output.NDCPosition.z
mov r0.w, l(1.000000)  // r0.w <- output.NDCPosition.w

#line 7
mov r1.xyzw, v3.xyzw  // r1.x <- output.color.x; r1.y <- output.color.y; r1.z <- output.color.z; r1.w <- output.color.w

#line 13
mul r2.xyzw, r0.xxxx, cb0[5].xyzw
mul r3.xyzw, r0.yyyy, cb0[6].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r0.zzzz, cb0[7].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r0.wwww, cb0[8].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- viewSpacePosition.x; r2.y <- viewSpacePosition.y; r2.z <- viewSpacePosition.z; r2.w <- viewSpacePosition.w

#line 15
div r2.xyzw, r2.xyzw, r2.wwww

#line 17
mul r3.xyz, r2.xxxx, cb0[1].xyzx
mul r4.xyz, r2.yyyy, cb0[2].xyzx
add r3.xyz, r3.xyzx, r4.xyzx
mul r2.xyz, r2.zzzz, cb0[3].xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, r2.wwww, cb0[4].xyzx
add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- p.x; r2.y <- p.y; r2.z <- p.z

#line 19
mov r2.xyz, r2.xyzx  // r2.x <- output.worldPosition.x; r2.y <- output.worldPosition.y; r2.z <- output.worldPosition.z

#line 21
mov o0.xyzw, r0.xyzw
mov o2.xyzw, r1.xyzw
mov o1.xyz, r2.xyzx
ret 
// Approximately 23 instruction slots used
