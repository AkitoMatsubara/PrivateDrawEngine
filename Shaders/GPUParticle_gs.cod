//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer global
// {
//
//   float4x4 View;                     // Offset:    0 Size:    64
//   float4x4 Projection;               // Offset:   64 Size:    64
//   float2 ParticleSize;               // Offset:  128 Size:     8
//   int ParticleNo;                    // Offset:  136 Size:     4 [unused]
//   float dummy;                       // Offset:  140 Size:     4 [unused]
//   float4 EyePos;                     // Offset:  144 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// global                            cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// TEXTURE                  0   xy          1     NONE   float       
// LIFE                     0     z         1     NONE   float     z 
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXTURE                  0   xy          1     NONE   float   xy  
// LIFE                     0     z         1     NONE   float     z 
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
gs_4_0
dcl_constantbuffer CB0[9], immediateIndexed
dcl_input_siv v[1][0].xyzw, position
dcl_input v[1][1].xy
dcl_input v[1][1].z
dcl_input v[1][2].xyzw
dcl_temps 3
dcl_inputprimitive point 
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_maxout 4
mul r0.xy, cb0[8].xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
mov r0.zw, l(0,0,0,0)
mov r1.xyz, v[0][0].xyzx
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb0[0].xyzw
dp4 r2.y, r1.xyzw, cb0[1].xyzw
dp4 r2.z, r1.xyzw, cb0[2].xyzw
dp4 r2.w, r1.xyzw, cb0[3].xyzw
mad r0.xyzw, r0.xyzw, r2.wwww, r2.xyzw
dp4 r1.x, r0.xyzw, cb0[4].xyzw
mov o0.x, r1.x
dp4 r1.x, r0.xyzw, cb0[5].xyzw
mov o0.y, r1.x
dp4 r1.x, r0.xyzw, cb0[6].xyzw
mov o0.z, r1.x
dp4 r0.w, r0.xyzw, cb0[7].xyzw
mov o0.w, r0.w
mov o1.xy, l(0,0,0,0)
mov o1.z, v[0][1].z
mov o2.xyz, r0.xyzx
mov o3.xyzw, v[0][2].xyzw
emit 
mov r0.xy, -cb0[8].xyxx
mov r0.zw, l(0,0,0,0)
mad r0.xyzw, r0.xyzw, r2.wwww, r2.xyzw
dp4 r1.x, r0.xyzw, cb0[4].xyzw
mov o0.x, r1.x
dp4 r1.x, r0.xyzw, cb0[5].xyzw
mov o0.y, r1.x
dp4 r1.x, r0.xyzw, cb0[6].xyzw
mov o0.z, r1.x
dp4 r0.w, r0.xyzw, cb0[7].xyzw
mov o0.w, r0.w
mov o1.xy, l(1.000000,0,0,0)
mov o1.z, v[0][1].z
mov o2.xyz, r0.xyzx
mov o3.xyzw, v[0][2].xyzw
emit 
mov r0.xy, cb0[8].xyxx
mov r0.zw, l(0,0,0,0)
mad r0.xyzw, r0.xyzw, r2.wwww, r2.xyzw
dp4 r1.x, r0.xyzw, cb0[4].xyzw
mov o0.x, r1.x
dp4 r1.x, r0.xyzw, cb0[5].xyzw
mov o0.y, r1.x
dp4 r1.x, r0.xyzw, cb0[6].xyzw
mov o0.z, r1.x
dp4 r0.w, r0.xyzw, cb0[7].xyzw
mov o0.w, r0.w
mov o1.xy, l(0,1.000000,0,0)
mov o1.z, v[0][1].z
mov o2.xyz, r0.xyzx
mov o3.xyzw, v[0][2].xyzw
emit 
mul r0.xy, cb0[8].xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
mov r0.zw, l(0,0,0,0)
mad r0.xyzw, r0.xyzw, r2.wwww, r2.xyzw
dp4 r1.x, r0.xyzw, cb0[4].xyzw
mov o0.x, r1.x
dp4 r1.x, r0.xyzw, cb0[5].xyzw
mov o0.y, r1.x
dp4 r1.x, r0.xyzw, cb0[6].xyzw
mov o0.z, r1.x
dp4 r0.w, r0.xyzw, cb0[7].xyzw
mov o0.w, r0.w
mov o1.xy, l(1.000000,1.000000,0,0)
mov o1.z, v[0][1].z
mov o2.xyz, r0.xyzx
mov o3.xyzw, v[0][2].xyzw
emit 
cut 
ret 
// Approximately 72 instruction slots used
